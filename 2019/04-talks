
<!-- //Section - talks Begin -->
<section id="talks" class="bg-white" style="padding-bottom: 0px;padding-top: 80px;">
  <div class="container">
    <div class="row justify-content-center pb-3">
      <div class="col-lg-9 pb-lg-3 text-center">
        <h3 class="font-alt font-w-600 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2">
          Preliminary Program
        </h3>
        <span class="bg-base-color d-inline-block mt-4 sep-line-thick-long"></span>
      </div>
      <!-- //.col-lg-9 -->
    </div>

    <div class="row justify-content-center pb-3">
      <div class="col-md tg-wrap"><table class="tg">
        <tr>
          <th width="100%" class="tg-lboi" colspan="3">Day one (31st Oct)</th>
        </tr>
        <tr>
          <th width="5%" class="tg-lboi">TIME</td>
            <th width="48%" class="tg-lboi">Mälarsalen</td>
              <th width="48%" class="tg-lbio">Lindgren</td>
              </tr>
              <tr>
                <td class="tg-lboi">08:00-9:00</td>
                <td class="tg-lboi" colspan="2">Registration</td>
              </tr>
              <td class="tg-48yq">9:00-9:15</td>
              <td class="tg-48yq" colspan="2">Opening</td>
              <tr>
                <td class="tg-lboi">9:15-10:00</td>
                <td class="tg-lboi" colspan="2"><a href="#keynote-shammamah"><b>Keynote</b>: The Ubiquity of Operationalizing Python Models</a></td>
              </tr>
              <tr>
                <td class="tg-48yq">10:00-10:30</td>
                <td class="tg-48yq" colspan="2">Coffee break</td>
              </tr>
              <tr>
                <td class="tg-lboi">10:30-11:00</td>
                <td class="tg-lboi"><a href="#" data-toggle="modal" data-target="#Ravi-Singh">Making sense of ML Black Box: Interpreting ML Models Using SHAP</td>
                  <td class="tg-lboi" rowspan="3"><a href="#" data-toggle="modal" data-target="#Sergei-Beilin">Python + Apache Kafka = &lt;3</a></td>
                </tr>
                <tr>
                  <td class="tg-48yq">11:00-11:30</td>
                  <td class="tg-48yq"><a href="#" data-toggle="modal" data-target="#Ludvig-Hult">What is causal inference, and why should data scientists know?</a></td>
                </tr>
                <tr>
                  <td class="tg-lboi">11:30-12:00</td>
                  <td class="tg-lboi"><a href="#" data-toggle="modal" data-target="#Tetiana-Kodliuk">Born to adapt: How Dathena solves the industry diversity problem</a></td>
                </tr>
                <tr>
                  <td class="tg-48yq">12:00-13:00</td>
                  <td class="tg-48yq" colspan="2">Lunch</td>
                </tr>
                <tr>
                  <td class="tg-lboi">13:00-13:45</td>
                  <td class="tg-lboi" colspan="2"><a href="#keynote-errol"><b>Keynote</b>: Scaling AI @ H&M</a></td>
                </tr>
                <tr>
                  <td class="tg-lboi">13:45-14:15</td>
                  <td class="tg-48yq"><a href="#" data-toggle="modal" data-target="#Guilherme-Caminha">Writing highly scalable and provenanceable data pipelines with Kubernetes and Python</a></td>
                  <td class="tg-48yq" rowspan="2"><a href="#career-panel">Panel Discussion: Career</a></td>
                </tr>
                <tr>
                  <td class="tg-lboi">14:15-14:45</td>
                  <td class="tg-lboi"><a href="#" data-toggle="modal" data-target="#Daniel-Roos">Why Python is huge in finance</a></td>
                </tr>
                <tr>
                  <td class="tg-48yq">14:45-16:15</td>
                  <td class="tg-48yq" colspan="2">Job fair</td>
                </tr>
                <tr>
                  <td class="tg-lboi">16:15-16:45</td>
                  <td class="tg-lboi"><a href="#" data-toggle="modal" data-target="#Half-Scheidl">Expressive coding extravaganza: making art with code</a></td>
                  <td class="tg-lboi" rowspan="3">Plotly Workshop</td>
                </tr>
                <tr>
                  <td class="tg-48yq">16:45-17:15</td>
                  <td class="tg-48yq"><a href="#" data-toggle="modal" data-target="#Jessica-Shortz">Learning Python (or Anything) Effectively</a></td>
                </tr>
                <tr>
                  <td class="tg-lboi">17:15-17:45</td>
                  <td class="tg-lboi"><a href="#" data-toggle="modal" data-target="#Anna-Lindegren">Becoming Free</a></td>
                </tr>
                <tr>
                  <td class="tg-lboi">17:45-</td>
                  <td class="tg-lboi" colspan="2">End of day one and mingle</td>
                </tr>

              </table></div>
              <div class="col-md tg-wrap"><table class="tg">
                <tr>
                  <th width="100%" class="tg-lboi" colspan="3">Day two (1st Nov)</th>
                </tr>
                <tr>
                  <th width="5%" class="tg-lboi">TIME</td>
                    <th width="48%" class="tg-lboi">Mälarsalen</td>
                      <th width="48%" class="tg-lboi">Lindgren</td>
                      </tr>
                      <tr>
                        <td class="tg-lboi">9:00-9:45</td>
                        <td class="tg-lboi" colspan="2"><a href="#keynote-tess"><b>Keynote</b>: Stories From Real World Vision Projects</a></td>
                      </tr>
                      <tr>
                        <td class="tg-48yq">9:45-10:15</td>
                        <td class="tg-48yq" colspan="2"><a href="#" data-toggle="modal" data-target="#Isaac-Bernat">From &gt;1 billion years to &lt;1 second</a></td>
                      </tr>
                      <tr>
                        <td class="tg-lboi">10:15-10:45</td>
                        <td class="tg-lboi" colspan="2">Coffe break</td>
                      </tr>
                      <tr>
                        <td class="tg-48yq">10:45-11:15</td>
                        <td class="tg-48yq"><a href="#" data-toggle="modal" data-target="#Gavin-Chan">Equip your performance toolbox - Cython v.s. Pybind11</a></td>
                        <td class="tg-48yq" rowspan="3"><a href="#" data-toggle="modal" data-target="#Timofey-Tipishev">Python Debugging: Beyond print</a></td>
                      </tr>
                      <tr>
                        <td class="tg-lboi">11:15-11:45</td>
                        <td class="tg-lboi"><a href="#" data-toggle="modal" data-target="#Ashwin-Vishnu-Mohanan">Make your Python code fly at transonic speeds!</a></td>
                      </tr>
                      <tr>
                        <td class="tg-48yq">11:45-12:15</td>
                        <td class="tg-48yq"><a href="#" data-toggle="modal" data-target="#Akos-Hochrein">Asyncio in the Wild</a></td>
                      </tr>
                      <tr>
                        <td class="tg-lboi">12:15-13:15</td>
                        <td class="tg-lboi" colspan="2">Lunch</td>
                      </tr>
                      <tr>
                        <td class="tg-48yq">13:15-13:45</td>
                        <td class="tg-48yq" colspan="2">Lightning talk</td>
                      </tr>
                      <tr>
                        <td class="tg-48yq">13:45-14:15</td>
                        <td class="tg-lboi"><a href="#" data-toggle="modal" data-target="#Alexander-Hultnér">Test Fast, Fix More – Property based in Python testing with Hypothesis</a></td>
                        <td class="tg-lboi" rowspan="3"><a href="#" data-toggle="modal" data-target="#Daniele-Procida">But I never wanted to do DevOps!</a></td>
                      </tr>
                      <tr>
                        <td class="tg-48yq">14:15-14:45</td>
                        <td class="tg-48yq"><a href="#" data-toggle="modal" data-target="#Erwan-Lemonnier">PyMacaron: microservices made easy</a></td>
                      </tr>
                      <tr>
                        <td class="tg-lboi">14:45-15:15</td>
                        <td class="tg-lboi"><a href="#" data-toggle="modal" data-target="#Anders-Hovmöller">Mutation Testing - Theory and Practice</a></td>
                      </tr>
                      <tr>
                        <td class="tg-48yq">15:15-15:45</td>
                        <td class="tg-48yq" colspan="2">Coffe break</td>
                      </tr>
                      <tr>
                        <td class="tg-lboi">15:45-16:15</td>
                        <td class="tg-lboi"><a href="#" data-toggle="modal" data-target="#Victor-Nyberg">Volumetric sculpting - Shaping a dynamic chisel</a></td>
                        <td class="tg-48yq" rowspan="2"><a href="#education-panel">Panel Discussion:<br>Learning python programming</a></td>
                      </tr>
                      <tr>
                        <td class="tg-48yq">16:15-16:45</td>
                        <td class="tg-48yq"><a href="#" data-toggle="modal" data-target="#Rockie-Yang"><b>Closing talk: </b>Big Data Pipeline Design and Tuning in PySpark</a></td>
                      </tr>
                      <tr>
                        <td class="tg-lboi">16:45-</td>
                        <td class="tg-lboi" colspan="2">Closing remarks and mingle</td>
                      </tr>
                    </table></div>
                  </div>
                  <div class="row justify-content-center pb-3">
                    <div class="row pb-5">
                      <div class="col-lg-9 pb-lg-4 text-center">
                        <span class="bg-base-color d-inline-block mt-4 sep-line-thick-long"></span>
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Talks -->
                <div class="modal fade" id="Erwan-Lemonnier" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">PyMacaron: microservices made easy</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        PyMacaron is a microservice framework integrating Flask with swagger specifications to spawn REST apis with minimal code overhead. It comes with a deployment pipeline towards docker and amazon Beanstalk, support asynchronous tasks out of the box, and plays well with DynamoDB. PyMacaron is live and powering the backend of a couple of Swedish startups, including ksting.com and bazardelux.com.
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Erwan Lemonnier
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Alexander-Hultnér" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Test Fast, Fix More – Property based in Python testing with Hypothesis</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        Test Fast, Fix More – Property based in Python testing with Hypothesis
                        Did you ever miss that corner case bug? Maybe it was a negative integer, strange timezone conversion behaviour, off by one error or something entirely else. These subtle bugs are often hard to catch and are easily missed in test cases. You like me have probably ran into plenty of code utilising only happy path testing, only to later discover subtle bugs which are easily fixed once pointed out. This is where property based testing comes into the picture.
                        <br>
                        <br>
                        In this talk I will focus on a wonderful Python library called Hypothesis but the concepts apply to other languages as well. Hypethesis is based on the same concept as the famous QuickCheck library for Haskell, which in turn have been ported a large number of languages. Hypothesis uses a wide range of input to find edge cases that you could otherwise easily miss, once it finds these cases it narrows down the input to the minimal breaking example to provide failures which are easier to understand.
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Alexander Hultnér
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Anders-Hovmöller" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Mutation Testing - Theory and Practice</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        What is mutation testing?
                        How does it work in practice?
                        What is it like to actually do it?
                        These questions will be answered!
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Anders Hovmöller
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Isaac-Bernat" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">From &#62;1 billion years to &#60;1 second</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        The goal of this talk is to empower people with over a dozen optimisation techniques which may be effectively used in a wide variety of situations, even beyond Python.
                        <br>
                        <br>
                        I will present best practices, typical pitfalls and common tools, but the main focus will be on a practical approach. I will showcase a small problem and a naive solution, just a few lines of Python, so that it's easily understood. Iteratively I will apply each optimisation, explain the reasoning behind it and note how execution time is reduced. By the end of the talk, one will see how the code evolved from something that would take &#62;1 billion years to compute to &#60;1 second on a regular laptop.
                        <br>
                        <br>
                        I will also compare running times between Python, PyPy and C++ implementations (one being just a few milliseconds), and show how the techniques may achieve vastly different speedups from the python versions.
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Isaac Bernat (github.com/isaacbernat), back-end engineer at Ivbar, LOGEX Group
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Ashwin-Vishnu-Mohanan" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Make your Python code fly at transonic speeds!</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        The talk is particularly useful for developers of Python applications which does heavy computation, with or without NumPy - for data science, research etc.
                        <br>
                        <br>
                        Python extensions allows for creation of high-performance applications, which can compete with C or C++ based ones. There are more than one framework to achieve this (for example, Cython, Pythran and Numba) with similar syntaxes but different underlying implementations. The talk surveys the state of the art of creating extensions and introduces Transonic (https://transonic.readthedocs.io). Transonic is a pure-Python package acting as a unifying front-end for writing extensions with the aim to enhance the developer experience.
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Ashwin Vishnu Mohanan, Ph.D. in Engineering Mechanics from KTH and post-doctoral researcher at Stockholm University. 5+ years of experience as a research software developer and contributor to various open-source projects.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Akos-Hochrein" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Asyncio in the Wild</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        Asyncio is a fairly new tool and no often used in production. In this talk we will be aiming for use-cases and examples so people can get more confidence moving away from the synchronous world. The talk aims to solve the problem of uncertainty when getting started with asynchronous programming in Python. After the talk the audience will be equipped with new tools they can look up at home to get started with asynchronous web development in Python, also, hopefully, they will have some extra confidence in the area.
                        <br>
                        <br>
			<a href="http://prez.is/pyconse2019" target="_blank">Slides from talk</a>
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Ákos Hochrein, software engineer and book enthusiast. He worked at various companies both on the frontend and the backend to deliver highly available and scalable solutions to their customers using the power of Python for the past 10 years. In his free time, he likes to read about psychology and dystopias while exploring the beer culture of Berlin.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Rockie-Yang" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Big Data Pipeline Design and Tuning in PySpark</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        PySpark is a great tool for doing big data ETL pipeline. While designing a big data pipeline, which is easy to maintain with a holistic view, simple to spot bottleneck is difficult. Not to say enable analytics on ETL pipelines. Rockie Yang will share his experiences on build effective ETL pipeline with PySpark.
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Rockie Yang
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Daniel-Roos" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Why Python is huge in finance?</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        Python is huge in finance, from banks to hedge-funds to day-traders; it is often the go-to tool to get things done. This talk dives into 'why?'. First looking at several areas where Python is big, what kind of work is involved, and the challenges for developers? Then at what libraries/language aspects make Python particularly suited. Pandas gets particular attention as it is incredibly useful and can make you super productive. We finish up with a demo of how you can use Monte Carlo techniques to build a mini stock market simulation and test out your own trading ideas. After the talk, you should have a better feel for what it's like working with Python in finance and also a good set of starting point if you want to start experimenting.
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Daniel Roos, with 15+ years of experience building Python/C++ financial systems for global banks and hedge funds. He has recently co-founded Njorda, a retail-focused fintech based in Stockholm.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Gavin-Chan" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Equip your performance toolbox - Cython v.s. Pybind11</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        Developing Python applications is handy and rapid, but its performance is always concerned, especially on the CPU bound problems. We will go through the common tricks and tips to archive the best performance on the Python level. Then the two reputable libraries, Cython and Pybind11, will be visited to archive the compiled language performance and compared with their implementation, flexibility and performance.
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Gavin Chan, quantitative developer in AXA Investment Manager Chorus Ltd with 7+ years of experience in software development and finance industry.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Ludvig-Hult" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">What is causal inference, and why should data scientists know?</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        With an explosion of computation power and modern algorithms more and more people are interested in AI, Analytics and Data Science. The Python ecosystem has been one of the most important driver for developing new tools and Python holds the power of modern analytics, but knowing the tools is not enough. Drawing conclusions from data is easy; getting the right conclusions is hard. Causal Inference is the art of drawing robust conclusions from nonexperimental data. This session will be an introduction to the field.
                        <br>
                        <br>
                        Audience level: Novice
                        <br>
                        <br>
                        Speaker: Ludvig Hult
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Ravi-Singh" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Making sense of ML Black Box: Interpreting ML Models Using SHAP</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        Extracting insights from a complex machine learning model is not easy hence for many people machine learning models are in a sense black box. This is a problem especially in high stake sectors like banking and healthcare. In this talk we will discuss how we can increase transparency, auditability, and stability of the model using valuable insights we can get from SHAP and explain reasoning behind individual predictions and how this can be aggregated into powerful model-level insights. We will also see the code to calculate SHAP values.
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Ravi Singh. Data Scientist at HBO Europe developing predictive models and influencing and driving the way the marketing team consume data and insights through highly usable and visual data analysis products.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Jessica-Shortz" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Learning Python (or Anything) Effectively</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        When we're learning something new - even something as friendly as Python - it can be difficult to make details stick long-term. This talk will give you some tips to help you learn Python - or anything else - more effectively. Although Python beginners will benefit the most from applying these concepts to Python, this talk is for anyone who wants to hack into their potential to learn more efficiently.
                        <br>
                        <br>
                        Audience level: Novice
                        <br>
                        <br>
                        Speaker: Jessica Shortz. After spending years working as an attorney, Jessica has been working toward a career change to programming over the past two years. She's still searching for the perfect Python IDE, so feel free to recommend your favorite to her if you see her at the convention!
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Guilherme-Caminha" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Writing highly scalable and provenanceable data pipelines with Kubernetes and Python</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        In this talk we are gonna explore launching and maintaining highly scalable data pipelines using Kubernetes. We are gonna go through the process of setting up a Pachyderm cluster and deploying Python-based data processing workloads. This setup enables teams to develop and maintain very robust data pipelines, with the benefits of autoscaling clusters and quick code iteration.
                        <br>
                        <br>
                        Audience level: Advanced
                        <br>
                        <br>
                        Speaker: Guilherme Caminha, Software Engineer from Brazil. His interests include Scientific / High Performance Computing, Backend Development and Machine Learning.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Victor-Nyberg" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Volumetric sculpting - Shaping a dynamic chisel</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        The shape of the tool determines the outcome of the result. A story about developing a volumetric 3D modeling and animation tool for creating virtual and physical sculptures using VTK, Numpy and PyQt told through the tool itself.
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Victor Nyberg, contemporary artist and software developer.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Tetiana-Kodliuk" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Born to adapt: How Dathena solves the industry diversity problem</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        How adjust your AI solution to the new domain? How retrain your model on new industry-specific data? How to increase labeled dataset for minimum cost? Do oracles exist? We will look at these problems from the data protection point of view and bring possible solutions. We will talk about methods, which discuss how to adapt NLP and CV solutions to any type of industry.
                        <br>
                        <br>
                        Speaker: Tetiana Kodliuk
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Timofey-Tipishev" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Python Debugging: Beyond print</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        What do you do when you see an exception stacktrace? Unless it is a simple error, you examine the runtime state that caused it. Many developers do that with print and logging, which works well for simple cases but becomes complex with more moving parts involved. Fortunately, there is a built-in Python debugger pdb and its improved iPython-powered wrapper ipdb, which lets you pause a running program, read and change its state, and even control the execution flow. Ipdb is most useful in post-mortem mode: one can explore the whole stacktrace after an exception has occurred and interactively collect all the relevant information in one go instead of printing one variable at a time.
                        <br>
                        <br>
                        This workshop is a hands-on tutorial on ipdb in Python 3. The exercises include configuring, launching, and navigating ipdb. If we have enough time we may also look at how to extend the default debugger class. The workshop aims to sharpen your debugging skills by having a faster feedback loop in testing bug origin theories. Follow along if you bring a laptop, otherwise the code and slides will be posted on Github. Your system must have python 3.7, git and virtualenv installed.
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Timofey Tipishev, Sportamore AB.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Sergei-Beilin" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Python + Apache Kafka = &#62;3</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        Workshop participants will get hands-on experience working with Apache Kafka: running a single-broker Kafka cluster on their machine, and produce and consume Avro-encoded messages from Python, using official Python kafka library as well as a high-level wrapper library. We will run Kafka and our examples in Docker, so Docker engine as well as docker-compose should be installed.
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Sergei Beilin
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Daniele-Procida" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">But I never wanted to do DevOps!</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        A workshop for the Python application developer who doesn't want to have to do DevOps too. You will learn how to deploy your web projects, making use of Docker containerisation, and letting a Platform-as-a-service take care of the frightening and unfriendly parts. Workshop handbook: <a href="https://no-devops.readthedocs.io/en/latest" target="_blank">https://no-devops.readthedocs.io/en/latest/</a>
                        <br>
                        <br>
                        Audience level: Intermediate
                        <br>
                        <br>
                        Speaker: Daniele Procida
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

                <div class="modal fade" id="Half-Scheidl" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Expressive coding extravaganza: making art with code</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        Generative art leverages computing power to produce elegant artwork, by skillfully controlling the location and magnitude of randomness in color, shape and position. Contemporary artists are more than ever using such principles in their creative workflow, to produce image, video and sound. This talk will give you an overview of the possibilities of using code in an expressive way, and inspire you to start drawing with Python.
                        <br>
                        <br>
                        Audience level: Advanced
                        <br>
                        <br>
                        Speaker: Half Scheidl works as a team lead and project manager in H&M Advanced Analytics, building world-class data platforms and machine learning services with cloud services and software engineering. He is an aspiring digital artist and guest lecturer at Beckmans Designhögskola in Stockholm, engaged in various activities related to digital art. His artwork combines code and technology to create illustrations, animations and interactive installations. Half is the organizer of the Creative Coding Stockholm Meetup group, and has recently exhibited in the Winter Festival at Harpa concert hall in Reykjavik.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>

               <div class="modal fade" id="Anna-Lindegren" tabindex="-1" role="dialog" aria-labelledby="talkLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="talkLabel">Becoming Free</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                        </button>
                      </div>
                      <div class="modal-body font-alt text-extra-large">
                        Python has become the most widely used programming language. From time to time, employed professionals consider going on their own and become a freelancer. This talk will cover the most demanded Python based services for outsourcing. Anna will also talk about the freelancer mindset together with the legal and economical aspect of being self-employed in Sweden. After the talk, you will be able to see the full picture of freelancing and decide for yourself, if it is for you.
                        <br>
                        <br>
                        Audience level: Novice
                        <br>
                        <br>
                        Speaker: Anna Kazakova Lindegren, Data Scientist, IBM. Anna is a data scientist with a background in accounting and auditing. Before switching to data science in 2017 she had been providing these services to different IT consulting companies and self-employed freelancers for several years. Among her clients were Praqma AB, Tedx Stockholm, A59 and many others.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      </div>
                    </div>
                  </div>
                </div>


              </section>
  <!-- //Section - talks End -->
