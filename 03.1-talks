  <!-- //Section - talks Begin -->
  <section id="talks" class="bg-white" style="padding-bottom: 0px;padding-top: 40px;">
    <div class="container">
      <div class="row justify-content-center pb-3">
        <div class="col-lg-9 pb-lg-3 text-center">
          <h3 class="font-alt font-w-600 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2">
            Selected talks
          </h3>
          <span class="bg-base-color d-inline-block mt-4 sep-line-thick-long"></span>
        </div>
        <!-- //.col-lg-9 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=pymacaron>
            PyMacaron: microservices made easy
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              PyMacaron is a microservice framework
              integrating Flask with swagger specifications
              to spawn REST apis with minimal code
              overhead. It comes with a deployment
              pipeline towards docker and amazon Beanstalk,
              support asynchronous tasks out of the box,
              and plays well with DynamoDB. PyMacaron is
              live and powering the backend of a couple
              of Swedish startups, including ksting.com
              and bazardelux.com.
            </p>
            <p class="font-alt text-extra-large">
              Author: Erwan Lemonnier
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=testfast>
            Test Fast, Fix More – Property based in Python testing with Hypothesis
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              Test Fast, Fix More – Property based in
              Python testing with Hypothesis
              Did you ever miss that corner case bug? Maybe
              it was a negative integer, strange timezone
              conversion behaviour, off by one error or
              something entirely else. These subtle bugs
              are often hard to catch and are easily missed
              in test cases. You like me have probably
              ran into plenty of code utilising only happy
              path testing, only to later discover subtle
              bugs which are easily fixed once pointed
              out. This is where property based testing
              comes into the picture.
            </p>
            <p class="font-alt text-extra-large">
              In this talk I will focus on a wonderful
              Python library called Hypothesis but
              the concepts apply to other languages
              as well. Hypethesis is based on the same
              concept as the famous QuickCheck library for
              Haskell, which in turn have been ported a
              large number of languages. Hypothesis uses a
              wide range of input to find edge cases that
              you could otherwise easily miss, once it
              finds these cases it narrows down the input
              to the minimal breaking example to provide
              failures which are easier to understand.
            </p>
            <p class="font-alt text-extra-large">
              Author: Alexander Hultnér
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=mutation>
            Mutation Testing - Theory and Practice
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              What is mutation testing?<br>
              How does it work in practice?<br>
              What is it like to actually do it?<br>
              These questions will be answered!<br>
            </p>
            <p class="font-alt text-extra-large">
              Author: Anders Hovmöller
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=1billion>
            From &gt;1 billion years to &lt;1 second
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              Adding resources to speed up processes isn't
              always feasible. This talk will present a
              simple problem and how to achieve >10^15x
              speedups on a regular laptop. Be warned, as
              overall time is reduced, minuscule overheads
              become gigantic -- some optimisations make
              more sense in lower-level coding context
              (e.g. C).
            </p>
            <p class="font-alt text-extra-large">
              Author: Isaac Bernat
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=codefly>
            Make your Python code fly at transonic speeds!
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              Python has matured enough to allow developers
              to write predominantly pure-Python with
              some optimized code which can compete with
              compiled languages such as C and C++. The
              talk presents the current state of the art in
              terms of writing extensions, and introduces
              a new package called Transonic (https://transonic.readthedocs.io).
            </p>
            <p class="font-alt text-extra-large">
              Author: Ashwin Vishnu Mohanan
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=asyncio>
            Asyncio in the Wild
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              Asyncio is a fairly new technology in the
              Python ecosystem, which enables us to write
              faster and more cost-efficient code. In this
              talk, we are going to get an overview of
              its features and see how it truly performs
              in the wild.
            </p>
            <p class="font-alt text-extra-large">
              Author: Akos Hochrein
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=bigdata>
            Big Data Pipeline Design and Tuning in PySpark
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              PySpark is a great tool for doing big data
              ETL pipeline. While designing a big data
              pipeline, which is easy to maintain with a
              holistic view, simple to spot bottleneck is
              difficult. Not to say enable analytics on
              ETL pipelines. Rockie Yang will share his
              experiences on build effective ETL pipeline
              with PySpark.
            </p>
            <p class="font-alt text-extra-large">
              Author: Rockie Yang
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=finance>
            Why Python is huge in finance
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              Python is huge in finance, from banks to
              hedge-funds to day-traders. This talk gives
              an overview, highlights some libraries
              (Pandas!) that make you super productive
              and finishes up with a small demo of how
              you can simulate the stock market.
            </p>
            <p class="font-alt text-extra-large">
              Author: Daniel Roos
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=cython>
            Equip your performance toolbox - Cython v.s. Pybind11
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              The common performance bottleneck in
              Python is the CPU bound. In this talk,
              I will introduce all the modern tools you
              can equip to resolve the CPU bound problem,
              from numpy / pandas to static compilation,
              e.g. cython and pybind11. I will approach
              and compare cython and pybind11 especially
              in large scale software development.
            </p>
            <p class="font-alt text-extra-large">
              Author: Gavin Chan
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=inference>
            What is causal inference, and why should data scientists know?
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              With an explosion of computation power
              and modern algorithms more and more people
              are interested in AI, Analytics and Data
              Science. The Python ecosystem has been one
              of the most important driver for developing
              new tools and Python holds the power of
              modern analytics, but knowing the tools is not
              enough. Drawing conclusions from data is easy;
              getting the right conclusions is hard. Causal
              Inference is the art of drawing robust
              conclusions from nonexperimental data. This
              session will be an introduction to the field.
            </p>
            <p class="font-alt text-extra-large">
              Author: Ludvig Hult
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=mlblackbox>
            Making sense of ML Black Box: Interpreting ML Models Using SHAP
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              Even the most sophisticated machine learning
              models are not reliable if you can't interpret
              them. This talk will cover SHAP, an essential
              tool for your data science toolbox. It breaks
              down how the model works for an individual
              prediction. We will see its application on
              a real-world data science problem.
            </p>
            <p class="font-alt text-extra-large">
              Author: Ravi Singh
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=learning>
            Learning Python (or Anything) Effectively
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <p class="font-alt text-extra-large">
              Oftentimes when we set out to learn
              something, we do so in a way that is
              ineffective and wastes time. Or perhaps
              we're able to retain the information for a
              short time, but it never makes its way into
              our long-term memory.
            </p>

            <p class="font-alt text-extra-large">
              The good news is that there are better ways to
              learn that will help you retain information
              long-term. We'll cover what research has
              taught us about learning effectively, tools
              that will help you learn better, and how we
              can apply these to expanding our knowledge
              of Python.
            </p>
            <p class="font-alt text-extra-large">
              Author: Jessica Shortz
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row" class="pb-3" style="display: flex; justify-content: center; align-items: center">
        <div class="col-lg-9 pb-lg-4 text-center">
          <h4 class="font-alt font-w-400 letter-spacing-2 text-uppercase title-xs-small title-extra-large-2" id=kubernetes>
            Writing highly scalable and provenanceable data pipelines with Kubernetes and Python
          </h4>
        </div>
        <!-- //.col-lg-9 -->

        <div class="col-lg-8">
          <div class="pl-lg-4 pt-5 pt-lg-0">
            <pp class="font-alt text-extra-large">
              In this talk we are gonna explore launching
              and maintaining highly scalable data pipelines
              using Kubernetes. We are gonna go through the
              process of setting up a Pachyderm cluster
              and deploying Python-based data processing
              workloads.
            </p>
            <p class="font-alt text-extra-large">
              Author: Guilherme Caminha
            </p>
          </div>
          <!-- //.pl-lg-4 -->
        </div>
        <!-- //.col-lg-8 -->
      </div>
      <!-- //.row -->

      <div class="row justify-content-center pb-3">
        <div class="row pb-5">
          <div class="col-lg-9 pb-lg-4 text-center">
            <span class="bg-base-color d-inline-block mt-4 sep-line-thick-long"></span>
          </div>
        </div>
      </div>
      <!-- //.row -->

    </div>
    <!-- //.container -->

  </section>
  <!-- //Section - talks End -->
